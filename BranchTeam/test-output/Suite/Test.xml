<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite hostname="NehaGokhale" name="Test" tests="39" failures="0" timestamp="17 Sep 2018 14:11:03 GMT" time="20.457" errors="0">
  <testcase name="@BeforeTest initialize" time="0.0" classname="Branch.ValidateAlphabeticalOrder">
    <failure type="org.openqa.selenium.WebDriverException" message="unknown error: Element &amp;lt;a href=&amp;quot;https://branch.io/team/#all&amp;quot; data-element-tag=&amp;quot;team&amp;quot;&amp;gt;...&amp;lt;/a&amp;gt; is not clickable at point (646, 505). Other element would receive the click: &amp;lt;div id=&amp;quot;cookiebanner&amp;quot; lang=&amp;quot;en&amp;quot; dir=&amp;quot;ltr&amp;quot; ng-non-bindable=&amp;quot;&amp;quot; name=&amp;quot;cookiebanner&amp;quot; style=&amp;quot;display: block; bottom: 0px;&amp;quot;&amp;gt;...&amp;lt;/div&amp;gt;
  (Session info: chrome=69.0.3497.92)
  (Driver info: chromedriver=2.41.578737 (49da6702b16031c40d63e5618de03a32ff6c197e),platform=Windows NT 10.0.17134 x86_64) (WARNING: The server did not provide any stacktrace information)
Command duration or timeout: 0 milliseconds
Build info: version: &amp;apos;3.13.0&amp;apos;, revision: &amp;apos;2f0d292&amp;apos;, time: &amp;apos;2018-06-25T15:24:21.231Z&amp;apos;
System info: host: &amp;apos;NEHAGOKHALE&amp;apos;, ip: &amp;apos;192.168.1.23&amp;apos;, os.name: &amp;apos;Windows 10&amp;apos;, os.arch: &amp;apos;amd64&amp;apos;, os.version: &amp;apos;10.0&amp;apos;, java.version: &amp;apos;1.8.0_171&amp;apos;
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, acceptSslCerts: false, applicationCacheEnabled: false, browserConnectionEnabled: false, browserName: chrome, chrome: {chromedriverVersion: 2.41.578737 (49da6702b16031..., userDataDir: C:\Users\nehag\AppData\Loca...}, cssSelectorsEnabled: true, databaseEnabled: false, goog:chromeOptions: {debuggerAddress: localhost:64469}, handlesAlerts: true, hasTouchScreen: false, javascriptEnabled: true, locationContextEnabled: true, mobileEmulationEnabled: false, nativeEvents: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: XP, platformName: XP, rotatable: false, setWindowRect: true, takesHeapSnapshot: true, takesScreenshot: true, unexpectedAlertBehaviour: , unhandledPromptBehavior: , version: 69.0.3497.92, webStorageEnabled: true}
Session ID: 21e34789ebc1b602b212b1b71431ea0e">
      <![CDATA[org.openqa.selenium.WebDriverException: unknown error: Element <a href="https://branch.io/team/#all" data-element-tag="team">...</a> is not clickable at point (646, 505). Other element would receive the click: <div id="cookiebanner" lang="en" dir="ltr" ng-non-bindable="" name="cookiebanner" style="display: block; bottom: 0px;">...</div>
  (Session info: chrome=69.0.3497.92)
  (Driver info: chromedriver=2.41.578737 (49da6702b16031c40d63e5618de03a32ff6c197e),platform=Windows NT 10.0.17134 x86_64) (WARNING: The server did not provide any stacktrace information)
Command duration or timeout: 0 milliseconds
Build info: version: '3.13.0', revision: '2f0d292', time: '2018-06-25T15:24:21.231Z'
System info: host: 'NEHAGOKHALE', ip: '192.168.1.23', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_171'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, acceptSslCerts: false, applicationCacheEnabled: false, browserConnectionEnabled: false, browserName: chrome, chrome: {chromedriverVersion: 2.41.578737 (49da6702b16031..., userDataDir: C:\Users\nehag\AppData\Loca...}, cssSelectorsEnabled: true, databaseEnabled: false, goog:chromeOptions: {debuggerAddress: localhost:64469}, handlesAlerts: true, hasTouchScreen: false, javascriptEnabled: true, locationContextEnabled: true, mobileEmulationEnabled: false, nativeEvents: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: XP, platformName: XP, rotatable: false, setWindowRect: true, takesHeapSnapshot: true, takesScreenshot: true, unexpectedAlertBehaviour: , unhandledPromptBehavior: , version: 69.0.3497.92, webStorageEnabled: true}
Session ID: 21e34789ebc1b602b212b1b71431ea0e
	at org.openqa.selenium.remote.ErrorHandler.createThrowable(ErrorHandler.java:214)
	at org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed(ErrorHandler.java:166)
	at org.openqa.selenium.remote.http.JsonHttpResponseCodec.reconstructValue(JsonHttpResponseCodec.java:40)
	at org.openqa.selenium.remote.http.AbstractHttpResponseCodec.decode(AbstractHttpResponseCodec.java:80)
	at org.openqa.selenium.remote.http.AbstractHttpResponseCodec.decode(AbstractHttpResponseCodec.java:44)
	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
	at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:548)
	at org.openqa.selenium.remote.RemoteWebElement.execute(RemoteWebElement.java:276)
	at org.openqa.selenium.remote.RemoteWebElement.click(RemoteWebElement.java:83)
	at Branch.ValidateEmployeeDepartmentsDataConsistency.initialize(ValidateEmployeeDepartmentsDataConsistency.java:46)
... Removed 26 stack frames]]>
    </failure>
  </testcase> <!-- @BeforeTest initialize -->
  <testcase name="@BeforeTest initialize" time="0.0" classname="Branch.ValidateAlphabeticalOrder">
    <skipped/>
  </testcase> <!-- @BeforeTest initialize -->
  <testcase name="@BeforeTest initialize" time="0.0" classname="Branch.ValidateAlphabeticalOrder">
    <skipped/>
  </testcase> <!-- @BeforeTest initialize -->
  <testcase name="@BeforeTest initialize" time="0.0" classname="Branch.ValidateAlphabeticalOrder">
    <skipped/>
  </testcase> <!-- @BeforeTest initialize -->
  <testcase name="@BeforeTest initialize" time="0.0" classname="Branch.ValidateAlphabeticalOrder">
    <skipped/>
  </testcase> <!-- @BeforeTest initialize -->
  <testcase name="@AfterTest teardown" time="0.0" classname="Branch.ValidateAlphabeticalOrder">
    <skipped/>
  </testcase> <!-- @AfterTest teardown -->
  <testcase name="@AfterTest teardown" time="0.0" classname="Branch.ValidateAlphabeticalOrder">
    <skipped/>
  </testcase> <!-- @AfterTest teardown -->
  <testcase name="@AfterTest teardown" time="0.0" classname="Branch.ValidateAlphabeticalOrder">
    <skipped/>
  </testcase> <!-- @AfterTest teardown -->
  <testcase name="@AfterTest teardown" time="0.0" classname="Branch.ValidateAlphabeticalOrder">
    <skipped/>
  </testcase> <!-- @AfterTest teardown -->
  <testcase name="@AfterTest teardown" time="0.0" classname="Branch.ValidateAlphabeticalOrder">
    <skipped/>
  </testcase> <!-- @AfterTest teardown -->
  <testcase name="@AfterTest teardown" time="0.0" classname="Branch.ValidateAlphabeticalOrder">
    <skipped/>
  </testcase> <!-- @AfterTest teardown -->
  <testcase name="@AfterTest teardown" time="0.0" classname="Branch.ValidateAlphabeticalOrder">
    <skipped/>
  </testcase> <!-- @AfterTest teardown -->
  <testcase name="validateAllEmployeesDisplayPictures" time="0.001" classname="Branch.ValidateEmployeeDisplayPictures">
    <skipped/>
  </testcase> <!-- validateAllEmployeesDisplayPictures -->
  <testcase name="validateDataEmployeesDisplayPictures" time="0.001" classname="Branch.ValidateEmployeeDisplayPictures">
    <skipped/>
  </testcase> <!-- validateDataEmployeesDisplayPictures -->
  <testcase name="validateEngineeringEmployeesDisplayPictures" time="0.001" classname="Branch.ValidateEmployeeDisplayPictures">
    <skipped/>
  </testcase> <!-- validateEngineeringEmployeesDisplayPictures -->
  <testcase name="validateMarketingEmployeesDisplayPictures" time="0.001" classname="Branch.ValidateEmployeeDisplayPictures">
    <skipped/>
  </testcase> <!-- validateMarketingEmployeesDisplayPictures -->
  <testcase name="validateOperationsEmployeesDisplayPictures" time="0.001" classname="Branch.ValidateEmployeeDisplayPictures">
    <skipped/>
  </testcase> <!-- validateOperationsEmployeesDisplayPictures -->
  <testcase name="validatePartnerGrowthEmployeesDisplayPictures" time="0.001" classname="Branch.ValidateEmployeeDisplayPictures">
    <skipped/>
  </testcase> <!-- validatePartnerGrowthEmployeesDisplayPictures -->
  <testcase name="validateProductEmployeesDisplayPictures" time="0.001" classname="Branch.ValidateEmployeeDisplayPictures">
    <skipped/>
  </testcase> <!-- validateProductEmployeesDisplayPictures -->
  <testcase name="validateRecruitingEmployeesDisplayPictures" time="0.001" classname="Branch.ValidateEmployeeDisplayPictures">
    <skipped/>
  </testcase> <!-- validateRecruitingEmployeesDisplayPictures -->
  <testcase name="validateEmployeeDescriptionIsNotNull" time="0.001" classname="Branch.ValidateEmployeeDescription">
    <skipped/>
  </testcase> <!-- validateEmployeeDescriptionIsNotNull -->
  <testcase name="validateAllAlphabeticalOrder" time="0.001" classname="Branch.ValidateAlphabeticalOrder">
    <skipped/>
  </testcase> <!-- validateAllAlphabeticalOrder -->
  <testcase name="validateDataAlphabeticalOrder" time="0.0" classname="Branch.ValidateAlphabeticalOrder">
    <skipped/>
  </testcase> <!-- validateDataAlphabeticalOrder -->
  <testcase name="validateEngineeringAlphabeticalOrder" time="0.001" classname="Branch.ValidateAlphabeticalOrder">
    <skipped/>
  </testcase> <!-- validateEngineeringAlphabeticalOrder -->
  <testcase name="validateMarketingAlphabeticalOrder" time="0.0" classname="Branch.ValidateAlphabeticalOrder">
    <skipped/>
  </testcase> <!-- validateMarketingAlphabeticalOrder -->
  <testcase name="validateOperationsAlphabeticalOrder" time="0.001" classname="Branch.ValidateAlphabeticalOrder">
    <skipped/>
  </testcase> <!-- validateOperationsAlphabeticalOrder -->
  <testcase name="validatePartnerGrowthAlphabeticalOrder" time="0.001" classname="Branch.ValidateAlphabeticalOrder">
    <skipped/>
  </testcase> <!-- validatePartnerGrowthAlphabeticalOrder -->
  <testcase name="validateProductAlphabeticalOrder" time="0.001" classname="Branch.ValidateAlphabeticalOrder">
    <skipped/>
  </testcase> <!-- validateProductAlphabeticalOrder -->
  <testcase name="validateRecruitingAlphabeticalOrder" time="0.001" classname="Branch.ValidateAlphabeticalOrder">
    <skipped/>
  </testcase> <!-- validateRecruitingAlphabeticalOrder -->
  <testcase name="validateDataEmployeeNames" time="0.001" classname="Branch.ValidateEmployeeNames">
    <skipped/>
  </testcase> <!-- validateDataEmployeeNames -->
  <testcase name="validateEngineeringEmployeeNames" time="0.001" classname="Branch.ValidateEmployeeNames">
    <skipped/>
  </testcase> <!-- validateEngineeringEmployeeNames -->
  <testcase name="validateMarketingEmployeeNames" time="0.001" classname="Branch.ValidateEmployeeNames">
    <skipped/>
  </testcase> <!-- validateMarketingEmployeeNames -->
  <testcase name="validateOperationsEmployeeNames" time="0.0" classname="Branch.ValidateEmployeeNames">
    <skipped/>
  </testcase> <!-- validateOperationsEmployeeNames -->
  <testcase name="validatePartnerGrowthEmployeeNames" time="0.001" classname="Branch.ValidateEmployeeNames">
    <skipped/>
  </testcase> <!-- validatePartnerGrowthEmployeeNames -->
  <testcase name="validateProductEmployeeNames" time="0.0" classname="Branch.ValidateEmployeeNames">
    <skipped/>
  </testcase> <!-- validateProductEmployeeNames -->
  <testcase name="validateRecruitingEmployeeNames" time="0.0" classname="Branch.ValidateEmployeeNames">
    <skipped/>
  </testcase> <!-- validateRecruitingEmployeeNames -->
  <testcase name="validateNoOfEmployees" time="0.001" classname="Branch.ValidateNumberOfEmployees">
    <skipped/>
  </testcase> <!-- validateNoOfEmployees -->
  <testcase name="validateDataEmployeeDepartmentsConsistency" time="0.0" classname="Branch.ValidateEmployeeDepartmentsDataConsistency">
    <skipped/>
  </testcase> <!-- validateDataEmployeeDepartmentsConsistency -->
  <testcase name="validateEngineeringEmployeeDepartmentsConsistency" time="0.001" classname="Branch.ValidateEmployeeDepartmentsDataConsistency">
    <skipped/>
  </testcase> <!-- validateEngineeringEmployeeDepartmentsConsistency -->
  <testcase name="validateMarketingEmployeeDepartmentsConsistency" time="0.002" classname="Branch.ValidateEmployeeDepartmentsDataConsistency">
    <skipped/>
  </testcase> <!-- validateMarketingEmployeeDepartmentsConsistency -->
  <testcase name="validateOperationsEmployeeDepartmentsConsistency" time="0.001" classname="Branch.ValidateEmployeeDepartmentsDataConsistency">
    <skipped/>
  </testcase> <!-- validateOperationsEmployeeDepartmentsConsistency -->
  <testcase name="validatePartnerGrowthEmployeeDepartmentsConsistency" time="0.001" classname="Branch.ValidateEmployeeDepartmentsDataConsistency">
    <skipped/>
  </testcase> <!-- validatePartnerGrowthEmployeeDepartmentsConsistency -->
  <testcase name="validateProductEmployeeDepartmentsConsistency" time="0.001" classname="Branch.ValidateEmployeeDepartmentsDataConsistency">
    <skipped/>
  </testcase> <!-- validateProductEmployeeDepartmentsConsistency -->
  <testcase name="validateRecruitingEmployeeDepartmentsConsistency" time="0.0" classname="Branch.ValidateEmployeeDepartmentsDataConsistency">
    <skipped/>
  </testcase> <!-- validateRecruitingEmployeeDepartmentsConsistency -->
  <testcase name="validateDataDepartmentNames" time="0.0" classname="Branch.ValidateEmployeeDepartmentNames">
    <skipped/>
  </testcase> <!-- validateDataDepartmentNames -->
  <testcase name="validateEngineeringDepartmentNames" time="0.001" classname="Branch.ValidateEmployeeDepartmentNames">
    <skipped/>
  </testcase> <!-- validateEngineeringDepartmentNames -->
  <testcase name="validateMarketingDepartmentNames" time="0.001" classname="Branch.ValidateEmployeeDepartmentNames">
    <skipped/>
  </testcase> <!-- validateMarketingDepartmentNames -->
  <testcase name="validateOperationsDepartmentNames" time="0.0" classname="Branch.ValidateEmployeeDepartmentNames">
    <skipped/>
  </testcase> <!-- validateOperationsDepartmentNames -->
  <testcase name="validatePartnerGrowthDepartmentNames" time="0.0" classname="Branch.ValidateEmployeeDepartmentNames">
    <skipped/>
  </testcase> <!-- validatePartnerGrowthDepartmentNames -->
  <testcase name="validateProductDepartmentNames" time="0.0" classname="Branch.ValidateEmployeeDepartmentNames">
    <skipped/>
  </testcase> <!-- validateProductDepartmentNames -->
  <testcase name="validateRecruitingDepartmentNames" time="0.001" classname="Branch.ValidateEmployeeDepartmentNames">
    <skipped/>
  </testcase> <!-- validateRecruitingDepartmentNames -->
</testsuite> <!-- Test -->
